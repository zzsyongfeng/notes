1. js是一种运行在浏览器中的解释型的编程语言.ECMAScript

2.js的引用 <script src="/static/js/abc.js"></script>，工具Visual Studio Code跨平台、免费、内置javaScript。

3.js是区分严格区分大小写的。

4.数据类型：
	Number：不区分整数和浮点数。
	
5.全局变量设计缺陷使用'use strict';解决。// 如果浏览器支持strict模式，代码将报ReferenceError错误:

6. 碰到字符串中含有特殊字符的转义字符结局 'I\'m \"OK\"!';  多行字符串：`....`

7.模板字符串  var name='小'   ${name}

8.字符串 var s = 'Hello, world!';
	s.length  长度
	s[0];	取对应值
	toUpperCase()	变大写
	toLowerCase()	变小写
	indexOf()	搜索指定字符串出现的位置
	substring(0, 5) 	截取出子串  一个数字代表开始到结束
	
9.数组	var arr = [1, 2, 3.14, 'Hello', null, true];
	arr.length	取数组长度
	arr.length=3;	数组的大小会变化   多出来的undefined填充，少的取前几个。
	arr[1]=99;	对应元素赋值	索引超过范围同样改变数组的大小
	arr.indexOf('Hello');	搜索指定元素的索引
	arr.slice(0, 3);	截取出子串  返回一个新的Array
	push()	向末尾添加元素
	pop()	把Array最后一个元素删除掉
	unshift()	向Array头部添加元素
	shift()		把Array头部元素删掉
	sort()	对数组进行排序
	reverse()	把整个Array的元素给掉个个，也就是反转
	splice()	方法是修改Array的“万能方法”	从指定的索引开始删除若干元素，然后再从该位置添加若干元素
			var arr = ['Microsoft', 'Apple', 'Yahoo', 'AOL', 'Excite', 'Oracle'];
			// 从索引2开始删除3个元素,然后再添加两个元素:
			arr.splice(2, 3, 'Google', 'Facebook'); // 返回删除的元素 ['Yahoo', 'AOL', 'Excite']
			arr; // ['Microsoft', 'Apple', 'Google', 'Facebook', 'Oracle']
			// 只删除,不添加:
			arr.splice(2, 2); // ['Google', 'Facebook']
			arr; // ['Microsoft', 'Apple', 'Oracle']
			// 只添加,不删除:
			arr.splice(2, 0, 'Google', 'Facebook'); // 返回[],因为没有删除任何元素
			arr; // ['Microsoft', 'Apple', 'Google', 'Facebook', 'Oracle']
	var arr = arr1.concat(arr2)		把当前的Array和另一个Array连接起来，并返回一个新的Array
	arr.join('-')		把数组转为字符串并用指定字符链接起来
	
10.对象  {}表示里面是键值对信息			JavaScript对象的所有属性都是字符串
	.key	取值
	['key']	取值
		访问不存在的属性不报错，而是返回undefined
	.key='asd'	赋值
	delete .key		删除属性值
	'name' in xiaoming; // true			检测属性是否在对象里面
			in 缺陷有可能是对象集成过来的
	xiaoming.hasOwnProperty('name'); // true		判断自身的而不是继承过来的
	
11.JavaScript把null、undefined、0、NaN和空字符串''视为false，其他值一概视为true，因此上述代码条件判断的结果是true

12.prompt('请输入身高(m):')   提示

13.for ... in	把一个对象的所有属性依次循环出来
	for (var key in o) {
		console.log(key); // 'name', 'age', 'city'
	}
	for ... in对Array的循环得到的是String而不是Number。
	
14.要过滤掉对象继承的属性，用hasOwnProperty()来实现。

15.while、do ... while（循环完成时判断条件，循环体至少执行一次）
	
	